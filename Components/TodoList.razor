@inject AppState state

<div id="todo-list-container">
  <h2>ToDo List</h2>
  <div class="summary-container">
    <span class="finished count">Completadas: (@Todos.Count(todo => todo.IsChecked))</span>
    <span class="pending count">Pendientes: (@Todos.Count(todo => !todo.IsChecked))</span>
  </div>
  <ul id="todo-list">
    @foreach (var todo in Todos)
    {
      <li class="todo-item" id="todo-@todo.Id">
        <p class="todo-title" @onclick="@(e => OnSelectItem(todo))">@todo.Title</p>
        <input 
          type="checkbox" 
          name="todo-@todo.Id" 
          id="todo-checkobox-@todo.Id" 
          @bind="todo.IsChecked"
        />
      </li>
    }
  </ul>
  <TodoInput OnAddTodo="@OnAddTodo" />
</div>

@code {
  public IList<TodoItem> Todos { get; set; } = new List<TodoItem>
    {
      new TodoItem
      {
        Id = 1,
        IsChecked = false,
        Title = "Learn another language"
      },
      new TodoItem
      {
        Id = 2,
        IsChecked = false,
        Title = "Finish Blazor sample"
      },
      new TodoItem
      {
        Id = 3,
        IsChecked = true,
        Title = "Call Lasik Vision"
      },
    };

  private void OnSelectItem(TodoItem item)
  {
    state.UpdateCurrentTask(item);
  }

  private void OnAddTodo(TodoItem newTodo)
  {
    Todos.Add(newTodo);
  }
}