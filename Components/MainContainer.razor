@inject AppState state
@implements IDisposable
@implements IObserver<TodoItem>

<div id="main-content">
  @if(!string.IsNullOrEmpty(CurrentTask))
  {
    <h2 class="main-title current-task-title">@CurrentTask</h2>
    <div class="timer-container">
      <Timer />
    </div>
  } else {
    <p class="no-current-task-warning">No hay ninguna tarea. ¿Por qué no agregas una?</p>
  }
</div>

@code {
  
  [Parameter]
  public string CurrentTask { get; set; }
  public IDisposable CurrentTaskSubscription { get; set; }


  protected override void OnInitialized()
  {
    CurrentTaskSubscription = state.CurrentTask.Subscribe(this);
  }

  public virtual void OnCompleted()
  {
  }

  public virtual void OnError(Exception e)
  {
  }

  public virtual void OnNext(TodoItem newCurrentTask)
  {
    this.CurrentTask = newCurrentTask?.Title ?? "";
    StateHasChanged();
  }

  public void Dispose()
  {
    CurrentTaskSubscription?.Dispose();
  }
}